<?xml version="1.0" encoding="utf-8"?>
<zkCodeTemplate>
	<content><![CDATA[
/**
 * 
 */
package ${zkModule.packagePrefix}<#if zkTableInfo.subModuleName??&zkTableInfo.subModuleName != "">.${zkTableInfo.subModuleName?uncap_first}</#if>.service;
 
import java.util.ArrayList;
import java.util.List;

import org.junit.Test;

import junit.framework.TestCase;

import com.zk.base.entity.ZKBaseEntity;
import ${zkModule.packagePrefix}<#if zkTableInfo.subModuleName??&zkTableInfo.subModuleName != "">.${zkTableInfo.subModuleName?uncap_first}</#if>.entity.${zkTableInfo.className};
import ${zkModule.packagePrefix}.helper.${zkModule.modulePrefix}${zkModule.moduleNameCap}TestHelper;

/**
 * ${zkTableInfo.className}ServiceTest
 * @author 
 * @version 
 */
public class ${zkTableInfo.className}ServiceTest {

	static ${zkTableInfo.className} makeNew() {
        ${zkTableInfo.className} e = new ${zkTableInfo.className}();
        e.setVersion(-1l);
        e.setRemarks("zk.test.data");
        // e.set
        return e;
    }
	
	@Test
    public void testDml() {
	
        ${zkTableInfo.className}Service s = ${zkModule.modulePrefix}${zkModule.moduleNameCap}TestHelper.getMainCtx().getBean(${zkTableInfo.className}Service.class);

        List<${zkTableInfo.className}> dels = new ArrayList<>();

        try {
            ${zkTableInfo.className} e = null;
            int result = 0;

            /*** 保存 ***/
            e = makeNew();
            result = 0;
            result = s.save(e);
            TestCase.assertEquals(1, result);
            dels.add(e);

            /*** 修改 ***/
            result = 0;
            result = s.save(e);
            TestCase.assertEquals(1, result);

            /*** 查询 ***/
            e = s.get(e);
            TestCase.assertNotNull(e);

            /*** 删除 ***/
            result = 0;
            result = s.del(e);
            TestCase.assertEquals(1, result);
            e = s.get(e);
            TestCase.assertEquals(ZKBaseEntity.DEL_FLAG.delete, e.getDelFlag().intValue());

        }
        catch(Exception e) {
            e.printStackTrace();
            TestCase.assertTrue(false);
        } finally {
            dels.forEach(item -> {
                s.diskDel(item);
            });
        }
    }
}]]>
	</content>
</zkCodeTemplate>

