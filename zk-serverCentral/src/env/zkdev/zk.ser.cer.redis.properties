
# Redis服务器地址
zk.ser.cen.redis.host=192.168.0.103
# Redis服务器连接端口
zk.ser.cen.redis.port=6379 
# Redis数据库索引（默认为0）
zk.ser.cen.redis.database=0 
# Redis服务器连接密码（默认为空）
zk.ser.cen.redis.password=root
# 连接超时时间（毫秒）
zk.ser.cen.redis.timeout=6000

#连接池最大连接数（使用负值表示没有限制）
zk.ser.cen.redis.pool.maxActive=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
zk.ser.cen.redis.pool.maxWait=-1 
# 连接池中的最大空闲连接
zk.ser.cen.redis.pool.maxIdle=8 
# 连接池中的最小空闲连接
zk.ser.cen.redis.pool.minIdle=0 
# 获得一个jedis实例的时候是否检查连接可用性（ping()）
#zk.test.redis.pool.testOnReturn=true
# idle状态监测用异步线程evict进行检查
#zk.test.redis.pool.testWhileIdle=true
# 一次最多evict的pool里的jedis实例个数
#zk.test.redis.pool.numTestsPerEvictionRun=10
# test idle 线程的时间间隔
#zk.test.redis.pool.timeBetweenEvictionRunsMillis=60000

# WHEN_EXHAUSTED_FAIL = 0; 直接抛出异常throw new NoSuchElementException("Pool exhausted");
# WHEN_EXHAUSTED_BLOCK = 1;borrowObject()将会阻塞，直到有可用新的或者空闲的object为止，或者如果配置了maxWait，
# 如果请求阻塞超时，将抛出NoSuchElementException.如果maxWait为负数，请求将会无限制的阻塞下去，默认配置。
# WHEN_EXHAUSTED_GROW = 2;borrowObject()将会继续创建新的对象，并返回，因此，pool维护的对像数将超出maxActive；
#zk.test.redis.pool.whenExhaustedAction=





