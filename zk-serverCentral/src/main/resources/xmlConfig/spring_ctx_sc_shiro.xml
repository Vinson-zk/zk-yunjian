<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	">
	
	<!-- 开启shiro的注解;  depends-on="lifecycleBeanPostProcessor"
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/> -->
    <!-- 
    <bean id="advisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        <property name="proxyTargetClass" value="true"></property>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor" >
    	<property name="securityManager" ref="securityManager"></property>
    </bean>
	 -->
	 
	<!-- 注入自定义的 Realm -->
    <bean id="zkSerCenUserSampleRealm" class="com.zk.server.central.security.ZKSerCenUserSampleRealm"></bean>
    
    <!-- 权限管理 Bean -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="zkSerCenUserSampleRealm"></property>
    </bean>
    
    <!-- 自定义 Token 创建 Filter -->
    <bean id="zkSerCenAuthenticationFilter" class="com.zk.server.central.security.ZKSerCenAuthenticationFilter">
    	<!-- <property name="loginFailureUrl" value="/${zk.path.admin}/${zk.path.serCen}/loginFailure"></property> -->
    </bean>
    
    <!-- <bean ></bean> -->
    
    <!-- 配置 ShiroFilter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"></property>
        <!-- 登入 api 接口 -->
        <property name="loginUrl" value="/${zk.path.admin}/${zk.path.serCen}/l/login"></property>
        <!-- 登入成功页面 -->
        <property name="successUrl" value="/${zk.path.admin}/${zk.path.serCen}"/> 
        <property name="filters">
            <map>
                <!-- 认证 token 创建过虑器 -->
                <entry key="authc" value-ref="zkSerCenAuthenticationFilter" />
            </map>
        </property>
        <!-- URL的拦截 -->
        <property name="filterChainDefinitions" >
        	<value>
        		<!-- 放开静态资源  -->
        		
        		/eureka/** = anon
        		/static/** = anon
    			/${zk.path.admin}/${zk.path.serCen}/anon = anon
    			/${zk.path.admin}/${zk.path.serCen}/test/** = anon
    			/${zk.path.admin}/${zk.path.serCen}/locale = anon
    			/${zk.path.admin}/${zk.path.serCen}/l/captcha = anon
    			/${zk.path.admin}/${zk.path.serCen}/l/doingCaptcha = anon
                /${zk.path.admin}/${zk.path.serCen}/l/login = authc
                /${zk.path.admin}/${zk.path.serCen}/l/logout = logout
                /** = user
    		</value>
        </property>
    </bean>
	
</beans>

