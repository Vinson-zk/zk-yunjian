
# =================== 配置 =================== 
# zk.path.admin=zk
zk.path.serCen=serCen
# 版本号
zk.ser.cen.version=v1.0
# 页面 copyright 内容，
zk.ser.cen.copyright=zk.xxx.com
# 验证码有效时长；毫秒
zk.ser.cen.auth.captcha.validity.time=600000
# 允许登录失败次数
zk.ser.cen.auth.login.fail.max.num=1

# =================== 普通 配置 =================== 
# env 中配置 应用端口
#server.port=10081
#server.port=80
# 应用名称
spring.application.name=zkServerCentral
# 解决中文乱码；
spring.http.encoding.force=true
# 指定 JMX domain name。不加这个标识，在一个 main 函数中无法启动多个 spring boot application。有点像 web.xml 中的 webAppRootKey
spring.jmx.defaultDomain=zkServerCentral
# 关闭自动 favicon；使用自定义
#spring.mvc.favicon.enabled=false

# =================== 静态内容 =================== 
## 请求 uri /myStatic/**, 只支持配置一个
#spring.mvc.static-path-pattern=/static/**
## 请求文件本地址
#spring.resources.static-locations=classpath:/static/,classpath:/eureka/
#spring.resources.static-locations=classpath:/static/,classpath:/static/eureka/
# Whether to force the encoding to the configured charset on HTTP requests and responses. 
# 解决静态文件中 中文乱码问题
# 解决中文乱码；
spring.http.encoding.force=true

# =================== JSP view 配置；默认路径是从：META-INF/resources 下开始 =================== 
spring.mvc.view.prefix=/jsp/
spring.mvc.view.suffix=.jsp

# =================== freemarker 配置；默认路径是从：classpath:/templates/ 下开始；视图文件必须放在 classpath:/templates/ 下 =================== 
spring.freemarker.prefix=freeMarker/
spring.freemarker.suffix=.ftl

# =================== eureka 中心配置 server 配置 =================== 
# 查看 eureka server 信息的路径，默认为 "/" 与 client 需要配置的 eureka.client.serviceUrl.defaultZone 没有关系；
eureka.dashboard.path=/${zk.path.admin}/${zk.path.serCen}/zkEureka

# 主机名；不能使用 localhost 和 127.0.0.1，定义一个 hostname，使用 localhost 时，registered-replicas 等一些 General Info 不能显示；
#eureka.instance.hostname=localhost
#eureka.instance.hostname=127.0.0.1
eureka.instance.hostname=zkEureka

# 注册时显示IP
#eureka.instance.prefer-ip-address=true

# 是否注册为服务
eureka.client.registerWithEureka=false
#eureka.client.register-with-eureka=false

# 是否检索服务，是否向服务器请求服务列表，默认 true， 
# 单点 Eureka Server 时，设置为false，因为本身就是 EurekaServer 不需要再从其他地方拉取服务列表
eureka.client.fetchRegistry=false
#eureka.client.fetchRegistry=true

# env 中配置 eureka 默认空间的地址，默认 http://localhost:8761/eureka/ 不知道怎么改；
# 如果使用 eureka.instance.hostname 注意 DNS 解析问题，一般通过 修改 host 来指定 eureka.instance.hostname 的映射 IP
#eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
#eureka.client.serviceUrl.defaultZone=http://localhost:${server.port}/eureka/
#eureka.client.serviceUrl.defaultZone=http://localhost:${server.port}/app/eureka/s/
#eureka.client.serviceUrl.defaultZone=http://127.0.0.1:9081/eureka/,http://localhost:9082/eureka/
#eureka.client.serviceUrl.defaultZone=http://localhost:10081/eureka/

# 关闭自我保护（生产时一般要开启该选项）
#eureka.server.enable-self-preservation=false
# 扫描失效服务的间隔时间（缺省为 60*1000ms 建议不要修改）
#eureka.server.eviction-interval-timer-in-ms=5000

# 设置实例的ID为ip:port
#eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}


# ---------- eureka 其他 配置
#eureka.instance.prefer-ip-address = true
#eureka.instance.ip-address=127.0.0.1
#eureka.instance.instance-id=127.0.0.1:${server.port}



# ---------------------------------------------------------------------------------
#eureka.client.register-with-eureka: true                     是否注册自己到Eureka Server上面
#eureka.client.fetch-registry: true                           是否从Eureka Server上面拉取服务信息
#eureka.client.enable: true                                   是否启用Eureka客户端,不启用则不注册到Eureka Server
#eureka.client.healthcheck.enable: true                       是否启用Eureka健康检查
#eureka.client.availability-zones: new HashMap<>()            告诉client有哪些可用的region和zone
#eureka.client.filter-only-up-instances: true                 是否过滤出InstanceStatus为UP的实例
#eureka.client.region: us-east-1                              指定该应用实例所在的region,AWS datacenters适用
#eureka.client.prefer-same-zone-eureka: true                  是否优先使用与该应用相同Zone的Eureka Server
#eureka.client.cache-refresh-executor-thread-pool-size: 2     缓存刷新线程池CacheRefreshThread的初始化线程数
#eureka.client.registry-fetch-interval-seconds: 30            Eureka client拉取服务注册信息间隔时间(s)
#eureka.client.instance-info-replication-interval-seconds: 30 复制实例变化信息到Eureka服务器所需要的时间间隔（s）
#eureka.client.eureka-service-url-poll-interval-seconds:  300 轮询Eureka服务端地址更改的间隔时间(s)
#eureka.client.eureka-server-read-timeout-seconds: 8          读取Eureka Server信息的超时时间(s)
#eureka.client.eureka-server-connect-timeout-seconds: 5       连接Eureka Server的超时时间(s)
#eureka.client.eureka-server-total-connections: 200           从Eureka客户端到所有Eureka服务端的连接总数
#eureka.client.eureka-server-total-connections-per-host: 50   从Eureka客户端到每个Eureka服务端主机的连接总数
#eureka.client.eureka-connection-idle-timeout-seconds: 30     Eureka服务端连接的空闲关闭时间(s)
#eureka.instance.metadata-map: new HashMap<>()                指定应用实例的元数据信息
#eureka.instance.prefer-ip-address: false                     是否优先使用ip地址来替代hostname作为实例hostname字段值 
#eureka.instance.lease-expiration-duration-in-seconds: 90     Eureka clent最后一次心跳后,Eureka Server剔除需要等待时间(s)
#eureka.instance.lease-renewal-interval-in-seconds: 30        客户端向Eureka Server发送心跳周期(s)

#eureka.server.enable-self-preservation: true                 Eureka Server是否开启自我保护模式
#eureka.server.renewal-percent-threshold: 0.85                指定每分钟需要收到的续约次数的阙值,如果阈值比最小值大,则自我保护模式开启
#eureka.server.eviction-interval-timer-in-ms: 60*1000         指定EvictionTask定时任务的调度频率,用于剔除过期的实例
#eureka.server.wait-time-in-ms-when-sync-empty: 1000*60*5     在Eureka服务器获取不到集群里对等服务器上的实例时，需要等待的时间






