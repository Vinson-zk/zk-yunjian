<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	">
	
	<!-- 开启shiro的注解;  depends-on="lifecycleBeanPostProcessor" 保证实现了Shiro内部lifecycle函数的bean执行 
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  -->
    <!-- AOP式方法级权限检查 
    <bean id="advisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor" >
        <property name="proxyTargetClass" value="true"></property>
    </bean>  -->
    <!--  spring-shiro 权限拦截 -->
    <bean class="com.zk.test.shiro.aop.ZKShiroStaticMethodMatcherPointcutAdvisor"></bean>
	 
	<bean id="defaultWebSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"></bean> 
	 
	<!-- Realm 样例
    <bean id="simpleAccountRealm" class="org.apache.shiro.realm.SimpleAccountRealm"></bean> -->
    <bean id="zkSecTestRealm" class="com.zk.test.shiro.realm.ZKShiroRealm"></bean>
    
    <!-- 权限管理 Bean 
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    <bean id="securityManager" class="com.zk.security.shiro.web.support.sec.mgt.ZKSecShiroDefaultWebSecurityManager">
    -->
    
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    	<property name="realm" ref="zkSecTestRealm"></property> 
		<property name="sessionManager" ref="defaultWebSessionManager" />
    </bean> 
    
    <!-- 配置 ShiroFilter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"></property>
        <!-- 登入 api 接口 -->
        <property name="loginUrl" value="/test/h/c/login"></property> 
        <!-- 登入成功页面 
        <property name="successUrl" value="/"/> -->
        <property name="filters">
            <map><!-- 注意，此处如果拦截器配置在外面，所有请求路径都会执行拦截；但如果在 filters 如果没有定义引用，则不会初始化 PathMatchingFilter.appliedPaths 所有不会有执行效果，反之就会有执行效果-->
                <!-- 登出 过虑器 -->
                <entry key="logout">
                	<bean class="com.zk.test.shiro.filter.ZKShiroLogoutFilter"></bean>
                </entry> 
                <!-- 登入 过虑器 -->
                <entry key="login">
                	<bean class="com.zk.test.shiro.filter.ZKShiroFormAuthcFilter"></bean> 
                </entry>  
                <!-- 需要用户登录 过虑器 -->
                <entry key="user">
   					<bean class="com.zk.test.shiro.filter.ZKShiroUserFilter"></bean> 
                </entry> 
            </map>
        </property> 
        <!-- URL的拦截 -->
        <property name="filterChainDefinitions" >
        	<value>
        		<!-- 放开静态资源  -->
        		/eureka/** = anon
        		/static/** = anon
        		/test/h/c/none = anon
        		/test/h/c/login = login
        		/test/h/c/logout = logout
                /** = user
    		</value>
        </property>
    </bean>
	
	
	
</beans>

