<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zk.sys.res.dao.ZKSysNavDao">

	<!-- 查询结果集 -->
	<!-- <sql id="columns">
		t.c_create_user_id AS "createUserId",
		t.c_update_user_id AS "updateUserId",
		t.c_create_date AS "createDate",
		t.c_update_date AS "updateDate",
		t.c_del_flag AS "delFlag",
		t.c_version AS "version",
		t.c_remarks AS "remarks",
		//
		t.c_p_desc AS "pDesc",  
		t.c_spare1 AS "spare1",
		t.c_spare2 AS "spare2",
		t.c_spare3 AS "spare3",
		t.c_spare_json AS "spareJson",  
		//
		t.c_name AS "name",
		t.c_nav_code AS "navCode",
		t.c_func_module_code AS "funcModuleCode",
		t.c_func_name AS "funcName",
		t.c_path AS "path",
		t.c_is_index AS "isIndex",
		t.c_is_show AS "isShow",
		t.c_icon AS "icon",
		t.c_sort AS "sort",
		t.c_pk_id AS "pkId"
	</sql> -->
	
	<!-- <sql id="selWhere">
		<where>
			<if test="pkId != null">
				AND t.c_pk_id = #{pkId}
			</if>
			//
			<if test="createUserId != null">
				AND t.c_create_user_id = #{createUserId}
			</if>
			<if test="updateUserId != null">
				AND t.c_update_user_id = #{updateUserId}
			</if>
			<if test="createDate != null">
				AND t.c_create_date = #{createDate}
			</if>
			<if test="updateDate != null">
				AND t.c_update_date = #{updateDate}
			</if>
			//
			<if test="delFlag != null">
				AND t.c_del_flag = #{delFlag}
			</if>
			<if test="name != null and name.getKeyValues() != null">
				AND 
				<foreach item="_v" index="_k" collection="name.getKeyValues()" open="" separator="AND" close="">
					JSON_UNQUOTE(JSON_EXTRACT(t.c_name, #{_k})) like CONCAT('%', REPLACE(REPLACE(REPLACE(#{_v}, '\\\\\\\\', '\\\\\\\\\\\\\\\\'), '_', '\\\\_'), '%', '\\\\%'), '%')
				</foreach>
			</if>
			<if test="navCode != null and navCode != '' ">
			  	AND t.c_nav_code like CONCAT('%', REPLACE(REPLACE(REPLACE(#{navCode}, '\\\\\\\\', '\\\\\\\\\\\\\\\\'), '_', '\\\\_'), '%', '\\\\%'), '%')
			</if>
			<if test="funcModuleCode != null and funcModuleCode != '' ">
			  	AND t.c_func_module_code = #{funcModuleCode}
			</if>
			<if test="funcName != null and funcName != '' ">
			  	AND t.c_func_name like CONCAT('%', REPLACE(REPLACE(REPLACE(#{funcName}, '\\\\\\\\', '\\\\\\\\\\\\\\\\'), '_', '\\\\_'), '%', '\\\\%'), '%')
			</if>
			<if test="path != null and path != '' ">
			  	AND t.c_path like CONCAT('%', REPLACE(REPLACE(REPLACE(#{path}, '\\\\\\\\', '\\\\\\\\\\\\\\\\'), '_', '\\\\_'), '%', '\\\\%'), '%')
			</if>
			<if test="isIndex != null ">
			  	AND t.c_is_index = #{isIndex}
			</if>
			<if test="isShow != null ">
			  	AND t.c_is_show = #{isShow}
			</if>
		</where>
	</sql> -->
	
	<!-- <sql id="pageOrder">
		<choose>
            <when test='page != null and page.sort != null'> ORDER BY 
                <foreach item="sort_item" index="sort_index" collection="page.sort" open="" separator="," close="">
                    t.${sort_item.columnName} ${sort_item.value}
                </foreach>
            </when>
            <otherwise>
                ORDER BY t.c_create_date ASC
            </otherwise>
        </choose>
	</sql> -->

	<!-- 按ID查询 -->
	<!-- <select id="get" resultType="ZKSysNav">
		SELECT
		<include refid="columns" />
		FROM t_sys_navigation t
		WHERE t.c_pk_id = #{pkId}
	</select> -->
	
	<!-- 一般查询 -->
	<!-- <select id="selectList" resultType="ZKSysNav">
		SELECT
		<include refid="columns" />
		FROM t_sys_navigation t
		<include refid="selWhere" />
		<include refid="pageOrder" />
	</select> -->
	
	<!-- 插入 -->
	<!-- <insert id="insert">
		INSERT INTO t_sys_navigation(
			c_create_user_id,
			c_update_user_id,
			c_create_date,
			c_update_date,
			c_del_flag,
			c_version,
			c_remarks,
			//
			c_p_desc,
			c_spare1,
			c_spare2,
			c_spare3,
			c_spare_json,
			//
			c_name,
			c_nav_code,
			c_func_module_code,
			c_func_name,
			c_path,
			c_sort,
			c_is_index,
			c_is_show,
			c_icon,
			c_pk_id
		) VALUES (
			#{createUserId},
			#{updateUserId},
			#{createDate},
			#{updateDate},
			#{delFlag},
			#{version},
			#{remarks},
			//
			#{c_p_desc},
			#{spare1},
			#{spare2},
			#{spare3},
			#{spareJson},
			//
			#{name},
			#{navCode},
			#{funcModuleCode},
			#{funcName},
			#{path},
			#{sort},
			#{isIndex},
			#{isShow},
			#{icon},
			#{pkId}
		)
	</insert> -->
	
	<!-- 修改 -->
	<!-- <update id="update">
		UPDATE t_sys_navigation SET 	
			<if test="delFlag != null">
				c_del_flag = #{delFlag},
			</if>
			c_version = #{version},
			c_remarks = #{remarks},
			//
			//c_p_desc = JSON_MERGE_PATCH(c_p_desc, #{c_p_desc}),
			//c_spare1 = #{spare1},
			//c_spare2 = #{spare2},
			//c_spare3 = #{spare3},
			//c_spare_json = JSON_MERGE_PATCH(c_spare_json, #{spareJson}),
			//
			c_name = JSON_MERGE_PATCH(c_name, #{name}),
			//
			//c_nav_code = #{navCode},
			//c_func_module_code = #{funcModuleCode},
			c_func_name = #{funcName},
			c_path = #{path},
			c_sort = #{sort},
			c_is_index = #{isIndex},
			c_is_show = #{isShow},
			c_icon = #{icon},
			c_update_user_id = #{updateUserId},
			c_update_date = #{updateDate}
		WHERE c_pk_id = #{pkId}
	</update> -->
	
	<!-- 逻辑删除 -->
	<!-- <update id="del">
		UPDATE t_sys_navigation 
		SET c_del_flag = #{delFlag}, 
			c_update_user_id = #{updateUserId},
			c_update_date = #{updateDate}
		WHERE c_pk_id = #{pkId}
	</update> -->
	
	<!-- 物理删除 -->
	<!-- <update id="diskDel">
		DELETE FROM t_sys_navigation WHERE c_pk_id = #{pkId}
	</update> -->
	
	<!-- 其他自定义方法 -->
	<!-- 按 code 查询, code 需要做唯一键 -->
	<!-- <select id="getByNavCode" resultType="ZKSysNav">
		SELECT
		<include refid="columns" />
		FROM t_sys_navigation t
		WHERE t.c_nav_code = #{navCode}
	</select> -->

</mapper>
 
 
 
 