# ===================================================================================================================
# 1、定义标准输出的日志格式(SYSTEM_OUT)
#       %level:表示日志级别，%-5level, 表示5个占位符; 即 DEBUG，INFO，WARN，ERROR，FATAL
#		%m 消息体(即我们填的信息)
#		%p 优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#		%r 自应用启动到输出该log信息耗费的毫秒数
#		%F 日志消息产生时所在的文件名称
#		%c 所在类的全名
#		%t 产生该日志事件的线程名(方法名)
#		%n 一个回车换行符，Windows平台为“rn”，Unix平台为“n”
#		%d 日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
#		%l 日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
#		%L 行号
#		%x 和当前线程相关联的NDC(嵌套诊断环境),像java servlets多客户多线程的应用中
#		%% 一个"%"字符

#	可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：
#		%5c: 输出category名称，最小宽度是5，category<5，默认的情况下右对齐
#		%-5c:输出category名称，最小宽度是5，category<5，"-"号指定左对齐,会有空格
#		%.5c:输出category名称，最大宽度是5，category>5，就会将左边多出的字符截掉，<5不会有空格
#		%20.30c:category名称<20补空格，并且右对齐，>30字符，就从左边交远销出的字符截掉
#
# 2、Log4j提供的 appender 有很多种，可以去官网查：https://www.docs4dev.com/docs/zh/log4j2/2.x/all/manual-appenders.html#RandomAccessFileAppender

# ===================================================================================================================
property.zk.layout.pattern = [zk:%-5level]->[%d{yyyy-MM-dd HH:mm:ss}][%t]%c [n:%L] %m%n
# ----- 控制台日志打印; Console; org.apache.log4j.ConsoleAppender   ThresholdFilter. DENY NEUTRAL ACCEPT 
appender.ConsoleLog.type = Console
appender.ConsoleLog.name = ConsoleLog
#appender.ConsoleLog.Target=System.out
appender.ConsoleLog.layout.type = PatternLayout
#appender.ConsoleLog.layout.pattern = [zk:%-5p]->[%d{yyyy-MM-dd HH:mm:ss}]%c{3} [n:%L] %m%n
appender.ConsoleLog.layout.pattern = ${zk.layout.pattern}
#appender.ConsoleLog.filter.LevelRangeFilter.type = LevelRangeFilter
#appender.ConsoleLog.filter.LevelRangeFilter.minLevel = WARN
#appender.ConsoleLog.filter.LevelRangeFilter.maxLevel = INFO
#appender.ConsoleLog.filter.LevelRangeFilter.onMatch = ACCEPT
#appender.ConsoleLog.filter.LevelRangeFilter.onMismatch = DENY
#appender.ConsoleLog.filter.f1.type = ThresholdFilter
#appender.ConsoleLog.filter.f1.level = ERROR
#appender.ConsoleLog.filter.f1.onMatch = DENY
#appender.ConsoleLog.filter.f1.onMismatch = NEUTRAL
#appender.ConsoleLog.filter.ThresholdFilter.type = ThresholdFilter
#appender.ConsoleLog.filter.ThresholdFilter.level = INFO
#appender.ConsoleLog.filter.ThresholdFilter.onMatch = ACCEPT
#appender.ConsoleLog.filter.ThresholdFilter.onMismatch = DENY
# ----- 文件大小到达指定尺寸的时候产生一个新的文件; RollingFile; org.apache.log4j.RollingFileAppender  ${spring.application.name}
appender.RollingFileError.type=RollingFile
appender.RollingFileError.name=RollingFileErrorLog
appender.RollingFileError.filter.threshold.level = Error
appender.RollingFileError.filter.threshold.type = ThresholdFilter
appender.RollingFileError.fileName=target/logs/error.log
appender.RollingFileError.filePattern=target/logs/error.all.%d{yyyyMMddHH}.log
appender.RollingFileError.layout.type=PatternLayout
appender.RollingFileError.layout.pattern=${zk.layout.pattern}
appender.RollingFileError.policies.type=Policies
appender.RollingFileError.policies.time.type=TimeBasedTriggeringPolicy
appender.RollingFileError.policies.time.interval=2
appender.RollingFileError.policies.time.modulate=true
appender.RollingFileError.policies.size.type=SizeBasedTriggeringPolicy
appender.RollingFileError.policies.size.size=512MB
appender.RollingFileError.strategy.type=DefaultRolloverStrategy
appender.RollingFileError.strategy.max = 5
# ----- org.apache.log4j.RollingFileAppender
appender.RollingFileInfo.type=RollingFile
appender.RollingFileInfo.name=RollingFileInfoLog
appender.RollingFileInfo.filter.LevelRangeFilter.type = LevelRangeFilter
appender.RollingFileInfo.filter.LevelRangeFilter.minLevel = WARN
appender.RollingFileInfo.filter.LevelRangeFilter.maxLevel = INFO
appender.RollingFileInfo.filter.LevelRangeFilter.onMatch = ACCEPT
appender.RollingFileInfo.filter.LevelRangeFilter.onMismatch = DENY
appender.RollingFileInfo.fileName=target/logs/info.log
appender.RollingFileInfo.filePattern=target/logs/info.all.%d{yyyyMMddHH}.log
appender.RollingFileInfo.layout.type=PatternLayout
appender.RollingFileInfo.layout.pattern=${zk.layout.pattern}
appender.RollingFileInfo.policies.type=Policies
appender.RollingFileInfo.policies.time.type=TimeBasedTriggeringPolicy
appender.RollingFileInfo.policies.time.interval=2
appender.RollingFileInfo.policies.time.modulate=true
appender.RollingFileInfo.policies.size.type=SizeBasedTriggeringPolicy
appender.RollingFileInfo.policies.size.size=512MB
appender.RollingFileInfo.strategy.type=DefaultRolloverStrategy
appender.RollingFileInfo.strategy.max = 5
# ----- 每天一个日志文件; org.apache.log4j.DailyRollingFileAppender 不再支持

# ===================================================================================================================
# ----------------------------------------------------------------------
# 日志级别优先级： OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL
# ----------------------------------------------------------------------
# @日志级别输出效果: 
# 一、appender 设置 filter level 时
# 	1、不给 appender 配置 logger 时：max(threshold level, root level) 
# 	2、给 appender 配置 logger 时：max(threshold level, logger level) 
# 二、appender 不设置 filter level 时
# 	logger level > root level
# @日志级别 is...Enabled()
#	logger level > root level > threshold level 

# ----------------------------------------------------------------------
# ConsoleLog, RollingFile
rootLogger.level = TRACE
rootLogger.appenderRef.consoleLog.ref = ConsoleLog
rootLogger.appenderRef.error.ref = RollingFileErrorLog
rootLogger.appenderRef.info.ref = RollingFileInfoLog

# ----------------------------------------------------------------------
#logger.consolelog.level = INFO
#logger.consolelog.name = xxx
#logger.consolelog.additivity = false
#logger.consolelog.appenderRef.out.ref = ConsoleLog
##logger.consolelog.appenderRef.error.ref = ConsoleLog  
##logger.consolelog.appenderRef.charge.ref = ConsoleLog  
##logger.consolelog.appenderRef.stdout.ref = ConsoleLog

# ----------------------------------------------------------------------
# Spring Boot 2.1 以后，RequestMappingHandlerMapping 中 controller 中映射的日志的级别修改为了 TRACE 级别；
logger.requestMapping.level = TRACE
logger.requestMapping.name = com.zk.log
#logger.requestMapping.name = org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping
#logger.requestMapping.name = org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping
#logger.requestMapping.name = org.springframework.web
logger.requestMapping.additivity = false
logger.requestMapping.appenderRef.out.ref = ConsoleLog
logger.requestMapping.appenderRef.out2.ref = RollingFileInfoLog





