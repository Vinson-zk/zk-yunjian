
# =================== 配置 =================== 
#zk.path.admin=zk
zk.path.gateway=gw
# 版本号
zk.gateway.version=v1.0
# 默认语言；注意这里不影响到 localeresolver 的默认语言
zk.path.defaultlocale=zh_cn

# =================== spring 配置 =================== 
# 指定 jmx domain name。不加这个标识，在一个 main 函数中无法启动多个 spring boot application。有点像 web.xml 中的 webapprootkey
spring.jmx.defaultdomain=zkGateway
 
logging.level.org.springframework.web=trace

# 应用名称
spring.application.name=yunjian.zk.gateway
# 解决中文乱码；
spring.http.encoding.force=true
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

# 关闭自动 favicon；使用自定义
#spring.mvc.favicon.enabled=false

spring.jmx.defaultdomain=yunjian.zk.gateway

spring.main.web-application-type=reactive
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

# 文件上传，处理字符集
zk.gateway.file.upload.multipartresolver.defaultencoding=utf-8
# 文件上传，最大上传大小，需要比邮件附件单个的文件大小配置值要大；50m=52428800
zk.gateway.file.upload.multipartresolver.maxuploadsize=52428800
# 文件上传，最大处理内存大小； 1m=1048576
zk.gateway.file.upload.multipartresolver.maxinmemorysize=10485760
# 文件上传，单个文件上传最大大小； 10m=10485760   50m=52428800
zk.gateway.file.upload.multipartresolver.maxuploadsizeperfile=52428800

# =================== 静态内容 =================== 
## 请求 uri /mystatic/**, 只支持配置一个
#spring.mvc.static-path-pattern=/static/**
## 请求文件本地址
#spring.resources.static-locations=classpath:/static/,classpath:/eureka/
#spring.resources.static-locations=classpath:/static/,classpath:/static/eureka/
# whether to force the encoding to the configured charset on http requests and responses. 
# 解决静态文件中 中文乱码问题
# 解决中文乱码；
#spring.http.encoding.force=true

# =================== eureka 中心配置 client 配置 =================== 
# 主机名
eureka.instance.hostname=zkGatewayClientApphost

# 是否 启用服务注册；false-不向服务中心注册；
eureka.client.enabled=false

# =================== gateway 配置 =================== 
# 启用服务发现自动路由
spring.cloud.gateway.discovery.locator.enabled=true
# 将服务id的路由转成全小写，默认是全大写
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# --- -----
# timeoutinmilliseconds值要比后面几个值要大，而且不能使用timeout-in-milliseconds 
hystrix.command.default.execution.isolation.thread.timeoutinmilliseconds=15000
# 通信超时时间(ms)
ribbon.readtimeout=10000
# 连接超时时间(ms)
ribbon.connecttimeout=10000
# 是否对所有操作重试
ribbon.oktoretryonalloperations=true
## 同一服务不同实例的重试次数
ribbon.maxautoretriesnextserver=2
## 同一实例的重试次数
ribbon.maxautoretries=1

## 连接所用的时间，适用于网络状况正常的情况下，两端连接所需要的时间
feign.client.config.default.connecttimeout=10000
##指建立连接后从服务端读取到可用资源所用的时间
feign.client.config.default.readtimeout=15000

# ---  ----- spring.cloud.gateway.routes 配置
# 1、路由规则的ID，需要保持唯一性
# 2、断言，用于进行路由选择
# 3、经过断言判断后要进行访问的 uri 地址

spring.cloud.gateway.routes[0].id=test
spring.cloud.gateway.routes[0].uri=https://www.baidu.com
spring.cloud.gateway.routes[0].predicates[0]=Path=/test/baidu
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2

# --- yunjian.zk.system 
spring.cloud.gateway.routes[1].id=yunjian.zk.system
spring.cloud.gateway.routes[1].uri=lb://yunjian.zk.system
spring.cloud.gateway.routes[1].predicates[0]=Path=/apiSys/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1
# --- yunjian.zk.wechat
spring.cloud.gateway.routes[2].id=yunjian.zk.wechat
spring.cloud.gateway.routes[2].uri=lb://yunjian.zk.wechat
spring.cloud.gateway.routes[2].predicates[0]=Path=/apiWechat/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1
# --- yunjian.zk.dev.tool
spring.cloud.gateway.routes[3].id=yunjian.zk.dev.tool
spring.cloud.gateway.routes[3].uri=lb://yunjian.zk.dev.tool
spring.cloud.gateway.routes[3].predicates[0]=Path=/apiDevTool/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1
# --- yunjian.zk.mail
spring.cloud.gateway.routes[4].id=yunjian.zk.mail
spring.cloud.gateway.routes[4].uri=lb://yunjian.zk.mail
spring.cloud.gateway.routes[4].predicates[0]=Path=/apiMail/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1
# --- yunjian.zk.file
spring.cloud.gateway.routes[5].id=yunjian.zk.file
spring.cloud.gateway.routes[5].uri=lb://yunjian.zk.file
spring.cloud.gateway.routes[5].predicates[0]=Path=/apiFile/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1

# = 示例 = ------------------------------------------------------------------------------------------------
## -- 配置方式一 访问：127.0.0.1:9401/api/baidu01/**
## 代理路由 id，任意设置，只要不与其他代理路由id 相同；
#spring.cloud.gateway.routes[0].id=test-baidu-01
## 代理目标地址
#spring.cloud.gateway.routes[0].uri=https://www.baidu.com
## 代理的请求地址
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/baidu01/**
## StripPrefix 移除路径个数：
#spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2
## PrefixPath 转发时，添加的路径前缀
##spring.cloud.gateway.routes[0].filters[0].PrefixPath=/xxx
## -- 配置方式二
#spring.cloud.gateway.routes[1].id=test-baidu-02
#spring.cloud.gateway.routes[1].uri=https://www.baidu.com
#spring.cloud.gateway.routes[1].predicates[0].name=Path
#spring.cloud.gateway.routes[1].predicates[0].args.pattern=/api/baidu02/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=2
## -- 配置方式三 转发
#spring.cloud.gateway.routes[2].id=test-baidu-03
#spring.cloud.gateway.routes[2].uri=https://www.baidu.com
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/baidu03/**
#spring.cloud.gateway.routes[2].predicates[0].name=RedirectTo
#spring.cloud.gateway.routes[2].predicates[0].args.status=301
#spring.cloud.gateway.routes[2].filters[0]=StripPrefix=2
## -- 配置方式四 lb 微服务，服务注册方式
#spring.cloud.gateway.routes[3].id=test-lb-01
## lb://{注册的服务名}
#spring.cloud.gateway.routes[3].uri=lb://xxx
#spring.cloud.gateway.routes[3].predicates[0]=Path=/api/lb01/**
#spring.cloud.gateway.routes[3].filters[0]=StripPrefix=2









